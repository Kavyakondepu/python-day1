//sum of a number:
n=int(input())
s=0
while n>0:
    k=n%10
    s+=k
    n=n//10
print(s)  


// REVERSE A NUM
num = 8675
reversed_num = 0

while num != 0:
    digit = num % 10
    reversed_num = reversed_num * 10 + digit
    num=num//10

print("Reversed Number: " + str(reversed_num))

  

//product of a num  :
n=int(input())
prod=1
while n>0:
    k=n%10
    prod*=k
    n=n/10
 print(prod)  
 

//sum of digits in a strng:
s='a1b2c3'
sum=0
for i in range(0,len(s)):     // for strgs we use range
    if s[i].isdigit():      
        sum+=int(s[i])         //to convert string to int
print(sum)        


//count the number of digits in strng:
s=input()
count=0
for i in range(0,len(s)):
    if s[i].isdigit():
        count+=1
print(count) 
       

//strng palindrome or not :
s="mom"
s1=""
for i in range(len(s)-1,-1,-1):
    s1+=s[i]
if(s1==s):
    print('pal..')
else:
    print('not')



//count the no of vowels
s='kavyaieo'
count=0
for i in range(0,len(s)):
    if(s[i]=='a' or s[i]=='e' or s[i]=='i' or s[i]=='o' or s[i]=='u'):
        count+=1
print(count)   

(or)
vowels=['a','e'...]
for i in range s:
  if i in vowels:
      count+=1


//is not digit(membership):
s=input()
count=0
for i in range(0,len(s)):
    if (not(s[i].isdigit())):
        count+=1
print(count)


// membership (not in):
data=[1,6,'apple','b','c']
fruits=['apple','b','c','d']
for i in data:
    if i not in fruits:
        print(i)


//is
s='hello'
s1='hello'
print(s is s1)


//split the string
s='hello welcome to sridevi'
s=s.split()
print(s)
 o/p :['hello', 'welcome', 'to', 'sridevi']


//count number of words :
s='hello welcome to hello sridevi'
s=s.split()
print(s.count('hello'))


// n=10
n1=True
print(n and n1)
o/p: true


//fun
def fun(branch):
    return "hello",branch
print(fun('cse'))
print(fun('it'))

op:('hello', 'cse')
('hello', 'it')

//even odd
def fun(n):
    if n%2==0:
        print('even')
    else:
        print('odd')
fun(9) 



//no divible by 4&6
def fun(arr):
    count=0
    for i in arr:
        if i%4==0 and i%6==0:
            print(i,end=' ')
            count+=1
    return count
arr=list(map(int,input().split()))  // input
print('count is:',fun(arr)) 


//   string reverse
def check(s):
    s=s.split()
    s=list(reversed(s)) #s becomes reversed list
    print(s)
    for i in s:
       rev=i[::-1]   #reverse the char
       print(rev,end='')
s="hello cse"
check(s)                   


//#FIBONACCI SERIES (0 1 1 2 3 5 8....)
def func(n):
    first=0
    sec=1
    print(first,sec,end=' ')
    count=2 # because already two nos are taken
    while count<=n:
        third=first+sec
        print(third,end=' ')
        first=sec
        sec=third
        count+=1
func(7)       


//#SUM OF DIGITS UNTIL IT BECOMES SINGLE DIGIT ex:178=16=7
n=int(input())
s=0
while n>0:
    k=n%10
    s+=k
    n=n/10

#TAKE A NUMBER 12345 DIVIDE INTP HALF 123,45 REVERSE THE SECOND NUMBER =>45123


//# FUNCTION IN FUNCTION
def check(ele):
    return ele%2==0
def inc(ar):
    count=0
    for i in ar:
        if check(i):
           print(i)
           count+=1
    return count
ar=[5,7,9,4,2]
print(inc(ar))
 

//# FUNCTION IN FUNCTION
def check(ele):
    ele=str(ele)
    return ele==ele[::-1]
def inc(ar):
    count=0
    for i in ar:
        if check(i):
            count+=1 
    return count
ar=[515,7,49,4004,242]
print(inc(ar))


//# NUMBER OF PLAINDROMES BETWEEN 1-50
def check(n):
    n=str(n)
    return len(n)>1 and n==n[::-1]
def inc(N):
    count=0
    for i in range(1,N+1):
        if check(i):
            print(i)
            count+=1 
    return count
N=50
print(inc(N))s

o/p:11 22 33 44 - 4